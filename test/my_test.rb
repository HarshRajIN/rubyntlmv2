# vim: set et sw=2 sts=2:

require File.dirname(__FILE__) + '/test_helper'

class MyTest < Test::Unit::TestCase
  # Test pattern is borrowed from pyton-ntlm

  include NTLM::TestUtility
  include NTLM::Util

  def setup
    # @server_challenge = hex_to_bin('01 23 45 67 89 ab cd ef')
    # @client_challenge = "\xaa" * 8
    # @time = "\0" * 8
    @workstation = 'COMPUTER'
    @server_name = 'Server'
    @user = 'user'
    @domain = 'DOMAIN'
    @password = 'SecREt01'
    @random_session_key = "\55" * 16
    @server_challenge = hex_to_bin('0123456789abcdef') #Challenge generated by the server (generated by server and sent in T2 message)
    @timestamp = 1055844000
    @client_challenge = hex_to_bin('ffffff0011223344') #a random client nonce

    @trgt_info = hex_to_bin("02000c0044004f004d00410049004e00" +
                              "01000c00530045005200560045005200" +
                              "0400140064006f006d00610069006e00" +
                              "2e0063006f006d000300220073006500" +
                              "72007600650072002e0064006f006d00" +
                              "610069006e002e0063006f006d000000" +
                              "0000")

  end

  def test_nt_v2_hash
    #assert_equal(hex_to_bin("04 b8 e0 ba7428 9c c540 826b ab 1d ee63 ae"), nt_v2_hash(@user, @password, @domain))
    assert_equal(hex_to_bin("04b8e0ba74289cc540826bab1dee63ae"), nt_v2_hash(@user, @password, @domain))
    #http://davenport.sourceforge.net/ntlm.html#theNtlmv2Response
  end

  def test_ntlmv2_response
    assert_equal(
      ntlm_v2_response( @user, @password, @domain, @server_challenge, @trgt_info,
        {
          :timestamp => @timestamp,
          :challenge => @client_challenge
        }
      ), hex_to_bin("cbabbca713eb795d04c97abc01ee4983" +
                    "01010000000000000090d336b734c301" +
                    "ffffff00112233440000000002000c00" +
                    "44004f004d00410049004e0001000c00" +
                    "53004500520056004500520004001400" +
                    "64006f006d00610069006e002e006300" +
                    "6f006d00030022007300650072007600" +
                    "650072002e0064006f006d0061006900" +
                    "6e002e0063006f006d00000000000000" +
                    "0000"
      ))
  end

  def test_lmv2_response
    assert_equal(
      NTLM::Util::lmv2_response( @user, @password, @domain, @server_challenge,
        {
          :client_challenge => @client_challenge
        }
      ), hex_to_bin("d6e6152ea25d03b7c6ba6629c2d6aaf0ffffff0011223344")
    )
  end

end
